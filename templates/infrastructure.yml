AWSTemplateFormatVersion: 2010-09-09
Description: >
  CloudFormation template to provision a CI/CD environment with a custom VPC,
  EC2 instance for the application, and an RDS MySQL database.
  Uses AWS Systems Manager Parameter Store for secure password management.

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access

  DBUsername:
    Type: String
    Description: Database master username
    MinLength: 1
    MaxLength: 16

Resources:
  # -----------------------------
  # Networking Section
  # -----------------------------
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CICD-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CICD-InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CICD-PublicSubnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: CICD-RouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # -----------------------------
  # Security Group
  # -----------------------------
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH (22) and HTTP (80) inbound
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: CICD-SecurityGroup

  # -----------------------------
  # EC2 Instance
  # -----------------------------
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      ImageId: ami-0c02fb55956c7d316  # Amazon Linux 2 (us-east-1)
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: CICD-EC2

  # -----------------------------
  # RDS Database
  # -----------------------------
  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: cicddb
      Engine: mysql
      EngineVersion: 8.0.39
      MasterUsername: !Ref DBUsername
      MasterUserPassword: "{{resolve:ssm-secure:/cicd/dbpassword:1}}"
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      PubliclyAccessible: true
      BackupRetentionPeriod: 1
      VPCSecurityGroups:
        - !GetAtt MySecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: CICD-RDS

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref MyVPC

  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet

  EC2PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt MyEC2Instance.PublicIp

  RDSEndpoint:
    Description: RDS Endpoint address
    Value: !GetAtt MyDBInstance.Endpoint.Address

